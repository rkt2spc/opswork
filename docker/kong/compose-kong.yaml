version: "3.5"

networks:
  default:
    name: kong

volumes:
  kong-postgres:
  kong-dashboard:

services:
  redis:
    image: redis:4.0
    restart: always
    container_name: kong-redis
    ports:
      - 127.0.0.1:6379:6379

  postgres:
    image: postgres:10.4
    restart: always
    container_name: kong-postgres
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=kong
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - kong-postgres:/var/lib/postgresql/data

  kong:
    image: kong:0.14
    restart: always
    container_name: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=123456
      - KONG_PG_DATABASE=kong
      - KONG_LOG_LEVEL=info
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_NGINX_DAEMON=off
    ports:
      - 127.0.0.1:8000:8000
      - 127.0.0.1:8001:8001

  dashboard:
    image: pantsel/konga:0.13.0
    restart: always
    container_name: kong-dashboard
    environment:
      - NODE_ENV=production
      - TOKEN_SECRET=supasecret
      - STORAGE_PATH=/konga-data/konga.db
    ports:
      - 127.0.0.1:1337:1337
    volumes:
      - kong-dashboard:/konga-data

  datadog:
    image: datadog/agent:6.6.0
    restart: always
    container_name: kong-datadog
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      - DD_API_KEY=${DD_API_KEY:-realapikey}
