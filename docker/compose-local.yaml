version: '3.5'

networks:
  default:
    name: compose_local

services:
  # # Redis 3.2
  # redis-3.2:
  #   image: redis:3.2
  #   restart: always
  #   container_name: redis-3.2
  #   ports:
  #     - 127.0.0.1:6379:6379

  # Redis 4.0
  redis-4.0:
    image: redis:4.0
    restart: always
    container_name: redis-4.0
    ports:
      - 127.0.0.1:6379:6379

  # # Mongo 2.4
  # mongodb-2.4:
  #   image: mongo:2.4
  #   restart: always
  #   container_name: mongodb-2.4
  #   command: mongod --config /mongodb/mongod.conf
  #   ports:
  #     - 127.0.0.1:27017:27017
  #   volumes:
  #     - ~/Data/mongodb-2.4:/mongodb

  # # Mongo 3.0
  # mongodb-3.0:
  #   image: mongo:3.0
  #   restart: always
  #   container_name: mongodb-3.0
  #   command: mongod --config /mongodb/mongod.conf
  #   ports:
  #     - 127.0.0.1:27017:27017
  #   volumes:
  #     - ~/Data/mongodb-3.0:/mongodb

  # # Mongo 3.2
  # mongodb-3.2:
  #   image: mongo:3.2
  #   restart: always
  #   container_name: mongodb-3.2
  #   command: mongod --config /mongodb/mongod.conf    
  #   ports:
  #     - 127.0.0.1:27017:27017
  #   volumes:
  #     - ~/Data/mongodb-3.2:/mongodb

  # Mongo 3.4
  mongodb-3.4:
    image: mongo:3.4
    restart: always
    container_name: mongodb-3.4
    command: mongod --config /mongodb/mongod.conf
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - ~/Data/mongodb-3.4:/mongodb

  # # Mongo 3.6
  # mongodb-3.6:
  #   image: mongo:3.6
  #   restart: always
  #   container_name: mongodb-3.6
  #   command: mongod --config /mongodb/mongod.conf
  #   ports:
  #     - 127.0.0.1:27017:27017
  #   volumes:
  #     - ~/Data/mongodb-3.6:/mongodb
  
  # MySQL 5.7
  mysql-5.7:
    image: mysql:5.7
    restart: always
    container_name: mysql-5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - ~/Data/mysql-5.7:/var/lib/mysql

  # # Postgres 9.6
  # postgres-9.6:
  #   image: postgres:9.6
  #   restart: always
  #   container_name: postgres-9.6
  #   environment:
  #     PGDATA: /postgresql/data
  #     POSTGRES_USER: postgres
  #   command: postgres -c config_file=/postgresql/postgresql.conf
  #   ports:
  #     - 127.0.0.1:5432:5432
  #   volumes:
  #     - ~/Data/postgres-9.6:/postgresql

  # Postgres 10.3
  postgres-10.3:
    image: postgres:10.3
    restart: always
    container_name: postgres-10.3
    environment:
      PGDATA: /postgresql/data
      POSTGRES_USER: postgres
    command: postgres -c config_file=/postgresql/postgresql.conf
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ~/Data/postgres-10.3:/postgresql

  # # Elasticsearch 2.4
  # elasticsearch-2.4:
  #   image: elasticsearch:2.4-alpine
  #   restart: always
  #   container_name: elasticsearch-2.4
  #   ports:
  #     - 127.0.0.1:9200:9200
  #     - 127.0.0.1:9300:9300
  #   volumes:
  #     - ~/Data/elasticsearch-2.4:/usr/share/elasticsearch/data

  # # Elasticsearch 5.1
  # elasticsearch-5.1:
  #   image: elasticsearch:5.1-alpine
  #   restart: always
  #   container_name: elasticsearch-5.1
  #   ports:
  #     - 127.0.0.1:9200:9200
  #     - 127.0.0.1:9300:9300
  #   volumes:
  #     - ~/Data/elasticsearch-5.1:/usr/share/elasticsearch/data

  # # Sourcegraph 2.5.13
  # sourcegraph-2.5.13:
  #   image: sourcegraph/server:2.5.13
  #   restart: always
  #   container_name: sourcegraph-2.5.13
  #   ports:
  #     - 127.0.0.1:7080:7080
  #   volumes:
  #     - ~/.sourcegraph/config:/etc/sourcegraph
  #     - ~/.sourcegraph/data:/var/opt/sourcegraph

  # Jetbrains license server
  # jetbrains-license-server:
  #   image: rocketspacer/jetbrains-license-proxy
  #   restart: always
  #   container_name: jetbrains-license-proxy
  #   ports:
  #     - 127.0.0.1:80:9000

  # # GitLab
  # gitlab:
  #   image: gitlab/gitlab-ee
  #   restart: always
  #   container_name: gitlab
  #   hostname: gitlab.example.com
  #   links: # Change components version as you want, just make sure they're up & healthy before spinning up gitlab
  #     - postgres-10.3:postgresql
  #     - redis-4.0:redis
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: |
  #       postgresql['enable'] = false # Disable built-in postgresql, use configured external
  #       gitlab_rails['db_username'] = "postgres"
  #       gitlab_rails['db_password'] = ""
  #       gitlab_rails['db_host'] = "postgresql"
  #       gitlab_rails['db_port'] = "5432"
  #       gitlab_rails['db_database'] = "gitlab" # Need to create database before-hand
  #       gitlab_rails['db_adapter'] = 'postgresql'
  #       gitlab_rails['db_encoding'] = 'utf8'
  #       redis['enable'] = false # Disable built-in redis, use configured external
  #       gitlab_rails['redis_host'] = 'redis'
  #       gitlab_rails['redis_port'] = '6379'
  #       external_url 'http://gitlab.example.com:80'
  #       gitlab_rails['gitlab_shell_ssh_port'] = 22
  #   ports:
  #     - 8888:80
  #     # - 443:443 # Enable if you support ssl/tls
  #     # - 22:22 # Enable if you to want ssh to container (better to docker exec)
  #   volumes:
  #     - ~/Data/gitlab/config:/etc/gitlab
  #     - ~/Data/gitlab/logs:/var/log/gitlab
  #     - ~/Data/gitlab/data:/var/opt/gitlab

  # # Gitea
  # gitea:
  #   image: gitea/gitea
  #   restart: always
  #   container_name: gitea
  #   environment:
  #     - APP_NAME=GitRocket
  #     - RUN_MODE=prod
  #     - USER_UID=1000
  #     - USER_GID=1000
  #   volumes:
  #     - ~/Data/gitea:/data
  #   ports:
  #     - 443:3000
  #     - 22:22
